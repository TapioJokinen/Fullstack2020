{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","nameObject","post","id","console","log","put","delete","Filter","props","value","filter","onChange","filterHandler","PersonForm","name","number","nameHandler","numberHandler","addNew","onClick","type","Person","people","deletePerson","map","person","i","key","ErrorNotification","message","className","SuccessNotification","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","errorMessage","setErrorMessage","successMessage","setSuccessMessage","getPersons","personService","useEffect","successfulAction","msg","setTimeout","failedAction","filteredPersons","toLowerCase","includes","e","target","preventDefault","k","length","forEach","concat","catch","error","txt","window","confirm","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40fbb2a7.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(res => res.data)\n}\n\nconst create = (nameObject) => {\n    const request = axios.post(baseUrl, nameObject)\n    return request.then(res => res.data)\n}\n\nconst update = (id, nameObject) => {\n    console.log(nameObject)\n    const request = axios.put(`${baseUrl}/${id}`, nameObject)\n    return request.then(res => res.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(res => console.log(res))\n}\n\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport personService from \"./services/persons\"\nimport \"./index.css\"\n\nconst Filter = (props) => {\n    return (\n        <div>\n            filter shown with: <input value={props.filter} onChange={props.filterHandler} />\n        </div>\n    )\n}\n\nconst PersonForm = (props) => {\n    const { name, number, nameHandler, numberHandler, addNew } = props\n    return (\n        <div>\n            <form>\n                <div>\n                    name: <input value={name} onChange={nameHandler} /><br></br>\n                    number: <input value={number} onChange={numberHandler} />\n                </div>\n                <div>\n                    <button onClick={addNew} type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst Person = ({ people, deletePerson }) => {\n\n    return (\n        <div>\n            {people.map((person, i) => {\n                return <li key={i}>\n                    {person.name} {person.number}\n                    <button onClick={() => deletePerson(person.id)}>delete</button>\n                </li>\n            })}\n        </div>\n    )\n}\n\nconst ErrorNotification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nconst SuccessNotification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className=\"success\">\n            {message}\n        </div>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [successMessage, setSuccessMessage] = useState(null)\n\n    const getPersons = () => {\n        personService\n            .getAll()\n            .then(data => {\n                setPersons(data)\n            })\n    }\n\n    useEffect(getPersons, [])\n\n    const successfulAction = msg => {\n        setSuccessMessage(msg)\n        setTimeout(() => {\n            setSuccessMessage(null)\n        }, 2000);\n    }\n\n    const failedAction = msg => {\n        setErrorMessage(msg)\n        setTimeout(() => {\n            setErrorMessage(null)\n        }, 2000);\n    }\n\n    const deletePerson = (id) => {\n        const person = persons.find(person => person.id === id)\n        if (window.confirm(`Delete person ${person.name}`)) {\n            personService\n                .deletePerson(id)\n                .then(res => getPersons())\n                .then(res => {\n                    successfulAction(`${person.name} deleted successfully!`)\n                })\n                .catch(error => {\n                    failedAction(`Person ${person.name} is already removed from database.`)\n                    getPersons()\n                })\n        }\n    }\n\n    const addPerson = (e) => {\n        e.preventDefault()\n        let k = true\n        let id_ = 0\n\n        const nameObject = {\n            name: newName,\n            number: newNumber,\n            id: id_\n        }\n\n        if (nameObject.name === \"\" || nameObject.number === \"\") {\n            failedAction(\"Name or number was empty\")\n        } else if (nameObject.name.length < 3 || nameObject.number.length < 8) {\n            failedAction(\"Name or number was too short\")\n        } else {\n            persons.forEach(person => {\n                if (person.name === nameObject.name) {\n                    k = false\n                    nameObject.id = person.id\n                }\n            });\n            if (k) {\n                setPersons(persons.concat(nameObject))\n                personService\n                    .create(nameObject)\n                    .then(res => getPersons())\n                    .then(res => {\n                        successfulAction(`${nameObject.name} added successfully!`)\n                    })\n                    .catch(error => {\n                        console.log(error)\n                    })\n            } else {\n                const txt = `${nameObject.name} was already added to phonebook. Would you like to replace it?`\n                if (window.confirm(txt)) {\n                    personService\n                        .update(nameObject.id, nameObject)\n                        .then(res => {\n                            getPersons()\n                            successfulAction(`${nameObject.name} updated successfully!`)\n                        })\n                        .catch(error => {\n                            failedAction(`Person ${nameObject.name} is already removed from database.`)\n                            getPersons()\n                        })\n                }\n            }\n        }\n    }\n\n    const onChangeHandlerName = (e) => {\n        setNewName(e.target.value)\n    }\n\n    const onChangeHandlerNumber = (e) => {\n        setNewNumber(e.target.value)\n    }\n\n    const onChangeHandlerFilter = (e) => {\n        setFilter(e.target.value)\n    }\n\n    const filteredPersons = filter === \"\"\n        ? persons\n        : persons.filter(person => person.name.toLowerCase().includes(filter))\n\n    return (\n        <div>\n            <ErrorNotification message={errorMessage} />\n            <SuccessNotification message={successMessage} />\n            <h2>Phonebook</h2>\n            <Filter value={filter} filterHandler={onChangeHandlerFilter} />\n            <h1>Add new</h1>\n            <PersonForm\n                name={newName}\n                number={newNumber}\n                nameHandler={onChangeHandlerName}\n                numberHandler={onChangeHandlerNumber}\n                addNew={addPerson} />\n            <h2>Numbers</h2>\n            <ul>\n                <Person people={filteredPersons} deletePerson={deletePerson} />\n            </ul>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}